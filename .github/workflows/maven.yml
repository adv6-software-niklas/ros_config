on:
  push:
    branches:
      - main

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Build PostgreSQL
        run: docker run -d -e POSTGRES_USER=mysecretuser -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 postgres
      - name: Wait for PostgreSQL to start
        run: sleep 10s
      - name: Check if Docker is running PostgreSQL
        run: docker ps

  Build:
    runs-on: ubuntu-latest
    needs: Test
    steps:
      - name: Build PostgreSQL
        run: docker run -d -e POSTGRES_USER=mysecretuser -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 postgres
      - name: Wait for PostgreSQL to start
        run: sleep 5s
      - name: Check if Docker is running PostgreSQL
        run: docker ps
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build maven app
        run: mvn -B package --file pom.xml
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Build
          path: ./

  SonarCloud:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: Build
          path: build
      - name: Unzip artifact
        run: zip -r Build.zip build/
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build PostgreSQL
        run: docker run -d -e POSTGRES_USER=mysecretuser -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 postgres
      - name: Wait for PostgreSQL to start
        run: sleep 5s
      - name: Check if Docker is running PostgreSQL
        run: docker ps
      - name: Sonar scan
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd build && mvn clean verify sonar:sonar \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=${{ secrets.SONAR_KEY }}

  Staging:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: Build
          path: build
      - name: Unzip artifact
        run: zip -r Build.zip build/
      - name: DockerHub Login
        run: docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Build Docker image
        run: docker build build/ -t mrneedhelp/adv6_ros_config:latest
      - name: Push image to registry
        run: docker push mrneedhelp/adv6_ros_config:latest
